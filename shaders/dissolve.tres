[gd_resource type="ShaderMaterial" load_steps=7 format=3 uid="uid://cuwkqfn4rvfao"]

[ext_resource type="Texture2D" uid="uid://duvxgqbtlhx0n" path="res://shaders/circular_gradient.png" id="2_xmwl8"]

[sub_resource type="Shader" id="Shader_bxb2x"]
code = "shader_type canvas_item;
uniform sampler2D text_map;

uniform float scale_factor = 0.5; // Adjust how much smaller the edges should be



uniform sampler2D dissolve_texture : source_color,repeat_enable;
uniform sampler2D texture2:repeat_enable;
uniform float dissolve_value : hint_range(0,1);
uniform float burn_size: hint_range(0.0, 1.0, 0.01);
uniform vec4 burn_color: source_color;
uniform float speed = 1.0;
uniform vec2 dissolve_movement_direction = vec2(1.0, 1.0); // Direction to move the dissolve texture

uniform vec2 second_dissolve_directoin=vec2(-1.2,-1.4);
void fragment(){
	float t1=texture(dissolve_texture,UV+dissolve_movement_direction*TIME*speed).r;
	float t2=texture(texture2,UV+second_dissolve_directoin*TIME*speed).r;
	float energy=t1*t2;
	vec4 energy_texture=vec4(energy,energy,energy,1);
    // Create animated UVs and ensure they wrap properly
    vec2 animated_uv = fract(UV + TIME * speed * dissolve_movement_direction);
	
    vec4 main_texture = texture(TEXTURE, UV);
	
    vec4 noise_texture = energy_texture;
	
	
	// This is needed to avoid keeping a small burn_color dot with dissolve being 0 or 1
	float burn_size_step = burn_size * step(0.001, dissolve_value) * step(dissolve_value, 0.999);
	float threshold = smoothstep(noise_texture.x - burn_size_step, noise_texture.x, dissolve_value);
	float border = smoothstep(noise_texture.x, noise_texture.x + burn_size_step, dissolve_value);
	
	COLOR.a *= threshold;
	COLOR.rgb = mix(burn_color.rgb, main_texture.rgb, border);
}
"

[sub_resource type="FastNoiseLite" id="FastNoiseLite_iveep"]

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_g4up3"]
seamless = true
noise = SubResource("FastNoiseLite_iveep")

[sub_resource type="FastNoiseLite" id="FastNoiseLite_o604u"]

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_lonar"]
seamless = true
noise = SubResource("FastNoiseLite_o604u")

[resource]
resource_local_to_scene = true
shader = SubResource("Shader_bxb2x")
shader_parameter/scale_factor = 0.5
shader_parameter/dissolve_value = 1.0
shader_parameter/burn_size = 0.06
shader_parameter/burn_color = Color(0, 0.643137, 1, 0.25098)
shader_parameter/speed = 0.03
shader_parameter/dissolve_movement_direction = Vector2(-1.37, 1.83)
shader_parameter/second_dissolve_directoin = Vector2(-0.45, 0.3)
shader_parameter/text_map = ExtResource("2_xmwl8")
shader_parameter/dissolve_texture = SubResource("NoiseTexture2D_g4up3")
shader_parameter/texture2 = SubResource("NoiseTexture2D_lonar")
